{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","preparedTodo","App","useState","selectedUser","setSelectedUser","selectedTitle","setSelectedTitle","setTodos","isTitleError","setTitleError","isUserError","setUserError","action","method","onSubmit","event","preventDefault","prev","array","newTodo","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62e899cf.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed === true,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  </>\n);\n","import React from 'react';\n\nimport { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const preparedTodo: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const theBiggestIndex = (array: { id: number }[]) => (\n  Math.max(...array.map(todo => todo.id)) + 1\n);\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedTitle, setSelectedTitle] = useState('');\n\n  const [todos, setTodos] = useState(preparedTodo);\n\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setUserError(false);\n  };\n\n  const hadleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (selectedTitle === '') {\n      setTitleError(true);\n    }\n\n    if (selectedUser === 0) {\n      setUserError(true);\n    }\n\n    if (selectedTitle && selectedUser) {\n      setSelectedTitle('');\n      setSelectedUser(0);\n\n      setTodos(prev => {\n        const newTodo = {\n          id: theBiggestIndex(prev),\n          userId: selectedUser,\n          title: selectedTitle,\n          completed: false,\n          user: getUser(selectedUser),\n        };\n\n        return [...prev, newTodo];\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={hadleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {' '}\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={selectedTitle}\n              onChange={handleTitle}\n            />\n          </label>\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {' '}\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}