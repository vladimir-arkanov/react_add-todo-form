{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","Card","classNames","completed","Typography","gutterBottom","variant","component","title","TodoList","todos","map","getUser","userId","usersFromServer","find","preparedTodo","App","useState","selectedUser","setSelectedUser","selectedTitle","setSelectedTitle","setTodos","isTitleError","setTitleError","isUserError","setUserError","action","method","onSubmit","event","preventDefault","prev","array","newTodo","Math","max","TextField","label","type","value","onChange","target","Select","MenuItem","disabled","Button","sx","mt","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f885d3c3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\n\nimport React from 'react';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <Card\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed === true,\n      },\n    )}\n  >\n    <Typography\n      gutterBottom\n      variant=\"h6\"\n      component=\"h2\"\n      className=\"TodoInfo__title\"\n    >\n      {todo.title}\n    </Typography>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </Card>\n);\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const preparedTodo: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const theBiggestIndex = (array: { id: number }[]) => (\n  Math.max(...array.map(todo => todo.id)) + 1\n);\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedTitle, setSelectedTitle] = useState('');\n\n  const [todos, setTodos] = useState(preparedTodo);\n\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUser = (event: SelectChangeEvent<number>) => {\n    setSelectedUser(+event.target.value);\n    setUserError(false);\n  };\n\n  const hadleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (selectedTitle === '') {\n      setTitleError(true);\n    }\n\n    if (selectedUser === 0) {\n      setUserError(true);\n    }\n\n    if (selectedTitle && selectedUser) {\n      setSelectedTitle('');\n      setSelectedUser(0);\n\n      setTodos(prev => {\n        const newTodo = {\n          id: theBiggestIndex(prev),\n          userId: selectedUser,\n          title: selectedTitle,\n          completed: false,\n          user: getUser(selectedUser),\n        };\n\n        return [...prev, newTodo];\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={hadleSubmit}\n      >\n        <div\n          className=\"field\"\n        >\n          Title:\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Enter a title\"\n            variant=\"outlined\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={selectedTitle}\n            onChange={handleTitle}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <Select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleUser}\n            >\n              <MenuItem value=\"0\" disabled>Choose a user</MenuItem>\n\n              {usersFromServer.map(user => (\n                <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\n              ))}\n            </Select>\n          </label>\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <Button\n          sx={{ mt: 1 }}\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          variant=\"contained\"\n          color={isUserError || isTitleError\n            ? 'error'\n            : 'success'}\n        >\n          Add\n        </Button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}